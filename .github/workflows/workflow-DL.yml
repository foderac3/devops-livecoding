name: CI/CD Pipeline
 
on:
  push:
    branches:
      - main
  pull_request:
 
jobs:
  test-backend:
    runs-on: ubuntu-22.04
 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.5.0
 
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
 
      - name: Build and test with Maven
        run: mvn clean verify --file ./simple-api/pom.xml
 
  build-and-push-docker-image:
    needs: test-backend
    runs-on: ubuntu-22.04
 
    steps:
      # Étape 1 : Checkout du code source
      - name: Checkout repository
        uses: actions/checkout@v2.5.0
 
      # Étape 2 : Login à Docker Hub
      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
 
      # Étape 3 : Construire et pousser l'image backend
      - name: Build image and push backend
        uses: docker/build-push-action@v3
        with:
          context: ./simple-api  # Chemin vers le Dockerfile du backend
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-simple-api:latest
          push: ${{ github.ref == 'refs/heads/main' }}
 
      # Étape 4 : Construire et pousser l'image database
      - name: Build image and push database
        uses: docker/build-push-action@v3
        with:
          context: ./database  # Chemin vers le Dockerfile de la base de données
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-database:latest
          push: ${{ github.ref == 'refs/heads/main' }}
 
      # Étape 5 : Construire et pousser l'image HTTPD
      - name: Build image and push httpd
        uses: docker/build-push-action@v3
        with:
          context: ./httpd  # Chemin vers le Dockerfile du serveur HTTP
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-httpd:latest
          push: ${{ github.ref == 'refs/heads/main' }}